{"version":3,"file":"static/js/870.dd967108.chunk.js","mappings":"qNAAaA,EAAe,CAC1B,QACA,YACA,cACA,kBACA,SCLWC,EAAS,CACpB,CACEC,KAAM,UACNC,aAAc,MAGhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,uBACNC,aAAc,MAEhB,CACED,KAAM,iCACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,mBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,2BACNC,aAAc,MAEhB,CACED,KAAM,OACNC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","sources":["assets/data/departments.js","assets/data/states.js","utils/formCheck.ts","utils/formError.ts","utils/errorMessage.ts","pages/CreateEmployee.tsx"],"sourcesContent":["export const departements = [\r\n  \"Sales\",\r\n  \"Marketing\",\r\n  \"Engineering\",\r\n  \"Human Resources\",\r\n  \"Legal\",\r\n];\r\n","export const states = [\r\n  {\r\n    name: \"Alabama\",\r\n    abbreviation: \"AL\",\r\n  },\r\n\r\n  {\r\n    name: \"American Samoa\",\r\n    abbreviation: \"AS\",\r\n  },\r\n  {\r\n    name: \"Arizona\",\r\n    abbreviation: \"AZ\",\r\n  },\r\n  {\r\n    name: \"Arkansas\",\r\n    abbreviation: \"AR\",\r\n  },\r\n  {\r\n    name: \"California\",\r\n    abbreviation: \"CA\",\r\n  },\r\n  {\r\n    name: \"Colorado\",\r\n    abbreviation: \"CO\",\r\n  },\r\n  {\r\n    name: \"Connecticut\",\r\n    abbreviation: \"CT\",\r\n  },\r\n  {\r\n    name: \"Delaware\",\r\n    abbreviation: \"DE\",\r\n  },\r\n  {\r\n    name: \"District Of Columbia\",\r\n    abbreviation: \"DC\",\r\n  },\r\n  {\r\n    name: \"Federated States Of Micronesia\",\r\n    abbreviation: \"FM\",\r\n  },\r\n  {\r\n    name: \"Florida\",\r\n    abbreviation: \"FL\",\r\n  },\r\n  {\r\n    name: \"Georgia\",\r\n    abbreviation: \"GA\",\r\n  },\r\n  {\r\n    name: \"Guam\",\r\n    abbreviation: \"GU\",\r\n  },\r\n  {\r\n    name: \"Hawaii\",\r\n    abbreviation: \"HI\",\r\n  },\r\n  {\r\n    name: \"Idaho\",\r\n    abbreviation: \"ID\",\r\n  },\r\n  {\r\n    name: \"Illinois\",\r\n    abbreviation: \"IL\",\r\n  },\r\n  {\r\n    name: \"Indiana\",\r\n    abbreviation: \"IN\",\r\n  },\r\n  {\r\n    name: \"Iowa\",\r\n    abbreviation: \"IA\",\r\n  },\r\n  {\r\n    name: \"Kansas\",\r\n    abbreviation: \"KS\",\r\n  },\r\n  {\r\n    name: \"Kentucky\",\r\n    abbreviation: \"KY\",\r\n  },\r\n  {\r\n    name: \"Louisiana\",\r\n    abbreviation: \"LA\",\r\n  },\r\n  {\r\n    name: \"Maine\",\r\n    abbreviation: \"ME\",\r\n  },\r\n  {\r\n    name: \"Marshall Islands\",\r\n    abbreviation: \"MH\",\r\n  },\r\n  {\r\n    name: \"Maryland\",\r\n    abbreviation: \"MD\",\r\n  },\r\n  {\r\n    name: \"Massachusetts\",\r\n    abbreviation: \"MA\",\r\n  },\r\n  {\r\n    name: \"Michigan\",\r\n    abbreviation: \"MI\",\r\n  },\r\n  {\r\n    name: \"Minnesota\",\r\n    abbreviation: \"MN\",\r\n  },\r\n  {\r\n    name: \"Mississippi\",\r\n    abbreviation: \"MS\",\r\n  },\r\n  {\r\n    name: \"Alaska\",\r\n    abbreviation: \"AK\",\r\n  },\r\n  {\r\n    name: \"Missouri\",\r\n    abbreviation: \"MO\",\r\n  },\r\n  {\r\n    name: \"Montana\",\r\n    abbreviation: \"MT\",\r\n  },\r\n  {\r\n    name: \"Nebraska\",\r\n    abbreviation: \"NE\",\r\n  },\r\n  {\r\n    name: \"Nevada\",\r\n    abbreviation: \"NV\",\r\n  },\r\n  {\r\n    name: \"New Hampshire\",\r\n    abbreviation: \"NH\",\r\n  },\r\n  {\r\n    name: \"New Jersey\",\r\n    abbreviation: \"NJ\",\r\n  },\r\n  {\r\n    name: \"New Mexico\",\r\n    abbreviation: \"NM\",\r\n  },\r\n  {\r\n    name: \"New York\",\r\n    abbreviation: \"NY\",\r\n  },\r\n  {\r\n    name: \"North Carolina\",\r\n    abbreviation: \"NC\",\r\n  },\r\n  {\r\n    name: \"North Dakota\",\r\n    abbreviation: \"ND\",\r\n  },\r\n  {\r\n    name: \"Northern Mariana Islands\",\r\n    abbreviation: \"MP\",\r\n  },\r\n  {\r\n    name: \"Ohio\",\r\n    abbreviation: \"OH\",\r\n  },\r\n  {\r\n    name: \"Oklahoma\",\r\n    abbreviation: \"OK\",\r\n  },\r\n  {\r\n    name: \"Oregon\",\r\n    abbreviation: \"OR\",\r\n  },\r\n  {\r\n    name: \"Palau\",\r\n    abbreviation: \"PW\",\r\n  },\r\n  {\r\n    name: \"Pennsylvania\",\r\n    abbreviation: \"PA\",\r\n  },\r\n  {\r\n    name: \"Puerto Rico\",\r\n    abbreviation: \"PR\",\r\n  },\r\n  {\r\n    name: \"Rhode Island\",\r\n    abbreviation: \"RI\",\r\n  },\r\n  {\r\n    name: \"South Carolina\",\r\n    abbreviation: \"SC\",\r\n  },\r\n  {\r\n    name: \"South Dakota\",\r\n    abbreviation: \"SD\",\r\n  },\r\n  {\r\n    name: \"Tennessee\",\r\n    abbreviation: \"TN\",\r\n  },\r\n  {\r\n    name: \"Texas\",\r\n    abbreviation: \"TX\",\r\n  },\r\n  {\r\n    name: \"Utah\",\r\n    abbreviation: \"UT\",\r\n  },\r\n  {\r\n    name: \"Vermont\",\r\n    abbreviation: \"VT\",\r\n  },\r\n  {\r\n    name: \"Virgin Islands\",\r\n    abbreviation: \"VI\",\r\n  },\r\n  {\r\n    name: \"Virginia\",\r\n    abbreviation: \"VA\",\r\n  },\r\n  {\r\n    name: \"Washington\",\r\n    abbreviation: \"WA\",\r\n  },\r\n  {\r\n    name: \"West Virginia\",\r\n    abbreviation: \"WV\",\r\n  },\r\n  {\r\n    name: \"Wisconsin\",\r\n    abbreviation: \"WI\",\r\n  },\r\n  {\r\n    name: \"Wyoming\",\r\n    abbreviation: \"WY\",\r\n  },\r\n];\r\n","import { RefObject, Dispatch } from \"react\";\r\nimport { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { dataErrorInt, newEmployeeInt } from \"../types/models\";\r\nimport {\r\n  setErrorForm,\r\n  setErrorMessage,\r\n  updateDataNoError,\r\n} from \"../feature/errorFormSlice\";\r\nimport { postUser } from \"../service/user\";\r\n\r\nconst formCheck = async (\r\n  dataForm: RefObject<HTMLFormElement>,\r\n  departmentValue: string | null,\r\n  stateValue: string | null,\r\n  dispatch: Dispatch<AnyAction>\r\n) => {\r\n  if (dataForm.current !== null) {\r\n    const firstNameInput = dataForm.current[0] as HTMLInputElement;\r\n    const lastNameInput = dataForm.current[1] as HTMLInputElement;\r\n    const birthdayInput = dataForm.current[2] as HTMLInputElement;\r\n    const startdayInput = dataForm.current[3] as HTMLInputElement;\r\n    const streetInput = dataForm.current[5] as HTMLInputElement;\r\n    const cityInput = dataForm.current[6] as HTMLInputElement;\r\n    const zipCodeInput = dataForm.current[8] as HTMLInputElement;\r\n\r\n    const departement = departmentValue !== null ? departmentValue : null;\r\n    const state = stateValue !== null ? stateValue : null;\r\n\r\n    if (\r\n      (firstNameInput.value &&\r\n        lastNameInput.value &&\r\n        birthdayInput.value &&\r\n        startdayInput.value &&\r\n        streetInput.value &&\r\n        cityInput.value &&\r\n        zipCodeInput.value) !== \"\" &&\r\n      birthdayInput.value < startdayInput.value &&\r\n      departement &&\r\n      state\r\n    ) {\r\n      const newEmployee: newEmployeeInt = {\r\n        firstName: firstNameInput.value,\r\n        lastName: lastNameInput.value,\r\n        birthday: birthdayInput.value,\r\n        startDay: startdayInput.value,\r\n        departement: departement,\r\n        street: streetInput.value,\r\n        city: cityInput.value,\r\n        state: state,\r\n        zipCode: zipCodeInput.value,\r\n      };\r\n\r\n      try {\r\n        postUser(newEmployee, dispatch);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      return true;\r\n    } else {\r\n      const dataError: dataErrorInt = {\r\n        firstName: firstNameInput.value === \"\" ? true : false,\r\n        lastName: lastNameInput.value === \"\" ? true : false,\r\n        birthday:\r\n          birthdayInput.value === \"\" ||\r\n          birthdayInput.value >= startdayInput.value\r\n            ? true\r\n            : false,\r\n        startDay: startdayInput.value === \"\" ? true : false,\r\n        departement: departement === null ? true : false,\r\n        street: streetInput.value === \"\" ? true : false,\r\n        city: cityInput.value === \"\" ? true : false,\r\n        state: state === null ? true : false,\r\n        zipCode: zipCodeInput.value === \"\" ? true : false,\r\n      };\r\n\r\n      dispatch(setErrorForm(true));\r\n      dispatch(updateDataNoError(dataError));\r\n      dispatch(setErrorMessage(true));\r\n\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default formCheck;\r\n","import { dataErrorInt } from \"../types/models\";\r\n\r\nconst formError = (dataError: dataErrorInt) => {\r\n  const firstNameDOM = document.querySelector(\".firstName__content input\");\r\n  const lastNameDOM = document.querySelector(\".lastName__content input\");\r\n  const birthdayDOM = document.querySelector(\".birthday__content input\");\r\n  const departementDOM = document.getElementById(\"departements\");\r\n  const streetDOM = document.querySelector(\".street__content input\");\r\n  const cityDOM = document.querySelector(\".city__content input\");\r\n  const stateDOM = document.getElementById(\"states\");\r\n  const zipCodeDOM = document.querySelector(\".zipCode__content input\");\r\n\r\n  dataError.firstName\r\n    ? firstNameDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : firstNameDOM?.removeAttribute(\"style\");\r\n  dataError.lastName\r\n    ? lastNameDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : lastNameDOM?.removeAttribute(\"style\");\r\n  dataError.birthday\r\n    ? birthdayDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : birthdayDOM?.removeAttribute(\"style\");\r\n  dataError.departement\r\n    ? departementDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : departementDOM?.removeAttribute(\"style\");\r\n  dataError.street\r\n    ? streetDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : streetDOM?.removeAttribute(\"style\");\r\n  dataError.city\r\n    ? cityDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : cityDOM?.removeAttribute(\"style\");\r\n  dataError.state\r\n    ? stateDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : stateDOM?.removeAttribute(\"style\");\r\n  dataError.zipCode\r\n    ? zipCodeDOM?.setAttribute(\"style\", \"border-bottom: 1px solid red\")\r\n    : zipCodeDOM?.removeAttribute(\"style\");\r\n};\r\n\r\nexport default formError;\r\n","const errorMessage = (error: boolean) => {\r\n  const errorMessage = document.getElementById(\"errorMessage\");\r\n\r\n  error\r\n    ? errorMessage?.classList.remove(\"hidden\")\r\n    : errorMessage?.classList.add(\"hidden\");\r\n\r\n  error\r\n    ? errorMessage?.removeAttribute(\"aria-hidden\")\r\n    : errorMessage?.setAttribute(\"aria-hidden\", \"false\");\r\n  error\r\n    ? errorMessage?.removeAttribute(\"aria-disabled\")\r\n    : errorMessage?.setAttribute(\"aria-disabled\", \"false\");\r\n};\r\nexport default errorMessage;\r\n","import { DropdownMenu } from \"@cecigiu2b/dropdown-menu-react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { departements } from \"../assets/data/departments\";\r\nimport { states } from \"../assets/data/states\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Modal from \"react-modal\";\r\nimport formCheck from \"../utils/formCheck\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { reset } from \"../feature/errorFormSlice\";\r\nimport formError from \"../utils/formError\";\r\nimport errorMessage from \"../utils/errorMessage\";\r\nimport { handleOpenNav } from \"../utils/handleOpenNav\";\r\n\r\nconst CreateEmployee = () => {\r\n  Modal.setAppElement(\"#root\");\r\n  const dispatch = useAppDispatch();\r\n\r\n  const dataNoError = useAppSelector((state) => state.errorForm.dataNoError);\r\n  const errorMessageData = useAppSelector(\r\n    (state) => state.errorForm.errorMessage\r\n  );\r\n  const openHeader = useAppSelector((state) => state.reponsive.openHeader);\r\n\r\n  const [departementValue, setDepartementValue] = useState(null);\r\n  const [stateValue, setStateValue] = useState(null);\r\n\r\n  const [birthday, setBirthday] = useState(new Date());\r\n  const [startDay, setStartDay] = useState(new Date());\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const form = useRef<HTMLFormElement>(null);\r\n\r\n  useEffect(() => {\r\n    formError(dataNoError);\r\n    errorMessage(errorMessageData);\r\n  }, [dataNoError, errorMessageData]);\r\n\r\n  const resetForm = () => {\r\n    const formDOM = document.getElementById(\"form\");\r\n\r\n    if (form !== null) {\r\n      const formElement = formDOM as HTMLFormElement;\r\n      formElement.reset();\r\n      setBirthday(new Date());\r\n      setStartDay(new Date());\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const check = await formCheck(form, departementValue, stateValue, dispatch);\r\n\r\n    if (check) {\r\n      dispatch(reset());\r\n      setModalIsOpen(true);\r\n      console.log(check);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    resetForm();\r\n    dispatch(reset());\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <main\r\n      data-testid=\"main-createdEmployee\"\r\n      className={\r\n        openHeader ? \"main createEmployee\" : \"main createEmployee close\"\r\n      }\r\n      onClick={() => {\r\n        handleOpenNav(dispatch, true);\r\n      }}\r\n    >\r\n      <h1>Create Employee</h1>\r\n      <span\r\n        id=\"errorMessage\"\r\n        className=\"error-message hidden\"\r\n        aria-hidden\r\n        aria-disabled\r\n      >\r\n        Please complete correctly all fields\r\n      </span>\r\n      <form id=\"form\" ref={form} onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"form__content\">\r\n          <div className=\"form__content--left\">\r\n            <div className=\"firstName__content\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" autoFocus />\r\n            </div>\r\n            <div className=\"lastName__content\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" />\r\n            </div>\r\n\r\n            <div className=\"birthday__content\">\r\n              <label htmlFor=\"birthday\">Birthday</label>\r\n              <DatePicker\r\n                className=\"dateInput\"\r\n                selected={birthday}\r\n                id=\"birthday\"\r\n                onChange={(date: Date) => setBirthday(date)}\r\n              />\r\n              <i className=\"far fa-calendar dateInput__icon\"></i>\r\n            </div>\r\n\r\n            <div className=\"startDay__content\">\r\n              <label htmlFor=\"startDay\">Start day</label>\r\n              <DatePicker\r\n                className=\"dateInput\"\r\n                id=\"startDay\"\r\n                selected={startDay}\r\n                onChange={(date: Date) => setStartDay(date)}\r\n              />\r\n              <i className=\"far fa-calendar dateInput__icon\"></i>\r\n            </div>\r\n            <div className=\"departements__content\">\r\n              <label htmlFor=\"departements\">Department</label>\r\n              <DropdownMenu\r\n                name=\"departements\"\r\n                options={departements}\r\n                customClassSelect=\"selectDepartement\"\r\n                customClassOption=\"optionDepartement\"\r\n                getValue={setDepartementValue}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form__content--right\">\r\n            <div className=\"street__content\">\r\n              <label htmlFor=\"street\">Street</label>\r\n              <input type=\"text\" name=\"street\" id=\"street\" />\r\n            </div>\r\n            <div className=\"city__content\">\r\n              <label htmlFor=\"city\">City</label>\r\n              <input type=\"text\" name=\"city\" id=\"city\" />\r\n            </div>\r\n            <div className=\"states__content\">\r\n              <label htmlFor=\"states\">State</label>\r\n              <DropdownMenu\r\n                name=\"states\"\r\n                options={states}\r\n                customClassSelect=\"selectStates\"\r\n                customClassOption=\"optionStates\"\r\n                getValue={setStateValue}\r\n              />\r\n            </div>\r\n            <div className=\"zipCode__content\">\r\n              <label htmlFor=\"zipCode\">Zip Code</label>\r\n              <input type=\"text\" name=\"zipCode\" id=\"zipCode\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form__buttons\">\r\n          {\" \"}\r\n          <input type=\"submit\" value=\"SAVE\" className=\"button\" />\r\n          <input\r\n            type=\"button\"\r\n            value=\"CANCEL\"\r\n            className=\"button\"\r\n            onClick={handleCloseModal}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <Modal isOpen={modalIsOpen} className=\"modal\">\r\n        <button id=\"confirmationModale\" onClick={handleCloseModal}>\r\n          <i className=\"fa-regular fa-circle-xmark\"></i>\r\n        </button>\r\n        <p>Employee created</p>\r\n      </Modal>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n"],"names":["departements","states","name","abbreviation","formCheck","dataForm","departmentValue","stateValue","dispatch","current","firstNameInput","lastNameInput","birthdayInput","startdayInput","streetInput","cityInput","zipCodeInput","departement","state","value","newEmployee","firstName","lastName","birthday","startDay","street","city","zipCode","postUser","error","console","dataError","setErrorForm","updateDataNoError","setErrorMessage","firstNameDOM","document","querySelector","lastNameDOM","birthdayDOM","departementDOM","getElementById","streetDOM","cityDOM","stateDOM","zipCodeDOM","setAttribute","removeAttribute","errorMessage","classList","remove","add","Modal","useAppDispatch","dataNoError","useAppSelector","errorForm","errorMessageData","openHeader","reponsive","useState","departementValue","setDepartementValue","setStateValue","Date","setBirthday","setStartDay","modalIsOpen","setModalIsOpen","form","useRef","useEffect","formError","handleSubmit","e","preventDefault","check","reset","log","handleCloseModal","formDOM","resetForm","className","onClick","handleOpenNav","id","ref","onSubmit","htmlFor","type","autoFocus","selected","onChange","date","options","customClassSelect","customClassOption","getValue","isOpen"],"sourceRoot":""}